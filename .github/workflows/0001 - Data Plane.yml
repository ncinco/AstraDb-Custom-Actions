name: '0001 - Data Plane'
 
on:
  workflow_dispatch:
    inputs:
      domain:
        description: "Domain you're targeting for deployment."
        type: choice
        required: true
        options:
        - accounts
        - kiwisaver
 
jobs:
  dev:
    name: 'dev'
    env:
      ARM_ACCESS_KEY: ${{ secrets.AZURE_BLOB_STORAGE_ACCESS_KEY }}
      ASTRA_DB_API_TOKEN: ${{secrets.ASTRA_API_TOKEN}}
      ASTRA_ORG_ID: ${{vars.ASTRA_ORG_ID}}
      TERM: linux
    runs-on: ubuntu-latest
    environment: dev
 
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: dataplane/${{ github.event.inputs.domain }}
 
    steps:
    - uses: hashicorp/setup-terraform@v2
    
    # Checkout the repository to the GitHub Actions runner
    - name: 'Checkout'
      id: checkout
      uses: actions/checkout@v3
 
    - name: 'Terraform Format'
      id: format
      run: terraform fmt
         
    - name: 'Terraform Init'
      id: init
      run: >
       terraform init -backend-config=backend_dev.conf
 
    - name: 'Terraform Validate'
      id: validate
      run: terraform validate

    - name: 'Terraform Plan'
      id: plan
      run: terraform plan -var token=$ASTRA_DB_API_TOKEN -var environment=dev -var organisationid=$ASTRA_ORG_ID
 
    - name: Terraform Apply
      id: apply
      if: github.ref == 'refs/heads/main'
      run: terraform apply -auto-approve -var token=$ASTRA_DB_API_TOKEN -var environment=dev -var organisationid=$ASTRA_ORG_ID

  uat:
    name: 'uat'
    needs: dev
    env:
      ARM_ACCESS_KEY: ${{ secrets.AZURE_BLOB_STORAGE_ACCESS_KEY }}
      ASTRA_DB_API_TOKEN: ${{secrets.ASTRA_API_TOKEN}}
      ASTRA_ORG_ID: ${{vars.ASTRA_ORG_ID}}
      TERM: linux
    runs-on: ubuntu-latest
    environment: uat
 
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: dataplane/${{ github.event.inputs.domain }}
 
    steps:
    - uses: hashicorp/setup-terraform@v2
    
    # Checkout the repository to the GitHub Actions runner
    - name: 'Checkout'
      id: checkout
      uses: actions/checkout@v3
 
    - name: 'Terraform Format'
      id: format
      run: terraform fmt
         
    - name: 'Terraform Init'
      id: init
      run: >
       terraform init -backend-config=backend_dev.conf
 
    - name: 'Terraform Validate'
      id: validate
      run: terraform validate

    - name: 'Terraform Plan'
      id: plan
      run: terraform plan -var token=$ASTRA_DB_API_TOKEN -var environment=uat -var organisationid=$ASTRA_ORG_ID
 
    - name: Terraform Apply
      id: apply
      if: github.ref == 'refs/heads/main'
      run: terraform apply -auto-approve -var token=$ASTRA_DB_API_TOKEN -var environment=uat -var organisationid=$ASTRA_ORG_ID

  prod:
    name: 'prod'
    needs: uat
    env:
      ARM_ACCESS_KEY: ${{ secrets.AZURE_BLOB_STORAGE_ACCESS_KEY }}
      ASTRA_DB_API_TOKEN: ${{secrets.ASTRA_API_TOKEN}}
      ASTRA_ORG_ID: ${{vars.ASTRA_ORG_ID}}
      TERM: linux
    runs-on: ubuntu-latest
    environment: prod
 
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: dataplane/${{ github.event.inputs.domain }}
 
    steps:
    - uses: hashicorp/setup-terraform@v2
    
    # Checkout the repository to the GitHub Actions runner
    - name: 'Checkout'
      id: checkout
      uses: actions/checkout@v3
 
    - name: 'Terraform Format'
      id: format
      run: terraform fmt
         
    - name: 'Terraform Init'
      id: init
      run: >
       terraform init -backend-config=backend_dev.conf
 
    - name: 'Terraform Validate'
      id: validate
      run: terraform validate

    - name: 'Terraform Plan'
      id: plan
      run: terraform plan -var token=$ASTRA_DB_API_TOKEN -var environment=prod -var organisationid=$ASTRA_ORG_ID
 
    - name: Terraform Apply
      id: apply
      if: github.ref == 'refs/heads/main'
      run: terraform apply -auto-approve -var token=$ASTRA_DB_API_TOKEN -var environment=prod -var organisationid=$ASTRA_ORG_ID
